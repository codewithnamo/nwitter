{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f32fbaed.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Sign In\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"../components/AuthForm\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      // delete tweet\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\"); // to clear the input field\n    setAttachment(\"\"); // clear attachment\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event; // remember read from right to left: inside of the event, go inside of the target, and get the files.\n    const theFile = files[0]; // we only have one file\n    const reader = new FileReader(); // this doesn't happen immediately. Need to wait a bit.\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Tweet from \"components/Tweet\";\nimport TweetFactory from \"../components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport default ({ refreshUser, userObj }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}